// -- Model dump before bytecode pipeline
module 0x42::mathtest {
    spec fun $mul_div(a: u64,b: u64,c: u64): u64 {
        Cast<u64>(Div(Mul(Cast<u128>(a), Cast<u128>(b)), Cast<u128>(c)))
    }
} // end 0x42::mathtest
module 0x42::test {
    use 0x42::mathtest; // resolved as: 0x42::mathtest
    private fun test_nested_mul_div() {
        {
          let a: u64 = {
            let (_, b: u64, _): (u64, u64, u64) = Tuple(1, 1, 1);
            Cast(Div<u128>(Mul<u128>(1, Cast(b)), 1))
          };
          if Eq<u64>(a, 1) {
            Tuple()
          } else {
            Abort(0)
          };
          Tuple()
        }
    }
    spec fun $test_nested_mul_div() {
        {
          let a: u64 = mathtest::$mul_div(1, mathtest::$mul_div(1, 1, 1), 1);
          Tuple()
        }
    }
} // end 0x42::test
