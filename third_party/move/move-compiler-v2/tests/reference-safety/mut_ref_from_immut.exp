
Diagnostics:
error: cannot mutably borrow local `s_ref` since immutable references exist
   ┌─ tests/reference-safety/mut_ref_from_immut.move:11:17
   │
10 │     public fun f1(s_ref: &S) acquires S {
   │                   ----- previous local borrow
11 │         let _ = &mut s_ref.g;
   │                 ^^^^^^^^^^^^ mutable borrow attempted here

error: cannot mutably borrow local `s` since immutable references exist
   ┌─ tests/reference-safety/mut_ref_from_immut.move:16:9
   │
15 │         let s = borrow_global<S>(@0x1);
   │                 ---------------------- previous global borrow
16 │         &mut s.g;
   │         ^^^^^^^^ mutable borrow attempted here

error: cannot mutably borrow local `s_ref` since immutable references exist
   ┌─ tests/reference-safety/mut_ref_from_immut.move:23:17
   │
22 │         let s_ref = &s;
   │                     -- previous local borrow
23 │         let x = &mut s_ref.g;
   │                 ^^^^^^^^^^^^ mutable borrow attempted here

error: cannot mutably borrow local `b_ref` since immutable references exist
   ┌─ tests/reference-safety/mut_ref_from_immut.move:50:17
   │
49 │         let b_ref = &a_ref.b;
   │                     -------- previous field borrow
50 │         let x = &mut b_ref.g;
   │                 ^^^^^^^^^^^^ mutable borrow attempted here
